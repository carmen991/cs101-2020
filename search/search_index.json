{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Computer Science 101 - 2020 Esta sera la pagina que utilizaremos para publicar cualquier proyecto. NO FORK No hagan fork a este repositorio. HDT Solucion de Hojas de Trabajo vistas en clase. Proyectos Para acceder a la pagina donde se publicaran las instrucciones de los proyectos y mini proyectos, haga click aqui Ejemplos de diferentes lenguajes Coleccion de ejemplos en clase. C folder c/ con ejemplos unicamente de Lenguaje C. Python Folder python/ con ejemplos unicamente para lenguaje Python 3. Dudas y preguntas: Para hacer una pregunta especifica de algun programa en este repositorio proceder a abrir un Issue Si tiene dudas de que es un Issue por favor lea documentacion: Issue detailed topics docs Issue from code Contacto Si desea contactarme favor enviar un correo a jcano@ufm.edu","title":"Home"},{"location":"#computer-science-101-2020","text":"Esta sera la pagina que utilizaremos para publicar cualquier proyecto. NO FORK No hagan fork a este repositorio.","title":"Computer Science 101 - 2020"},{"location":"#hdt","text":"Solucion de Hojas de Trabajo vistas en clase.","title":"HDT"},{"location":"#proyectos","text":"Para acceder a la pagina donde se publicaran las instrucciones de los proyectos y mini proyectos, haga click aqui","title":"Proyectos"},{"location":"#ejemplos-de-diferentes-lenguajes","text":"Coleccion de ejemplos en clase.","title":"Ejemplos de diferentes lenguajes"},{"location":"#c","text":"folder c/ con ejemplos unicamente de Lenguaje C.","title":"C"},{"location":"#python","text":"Folder python/ con ejemplos unicamente para lenguaje Python 3.","title":"Python"},{"location":"#dudas-y-preguntas","text":"Para hacer una pregunta especifica de algun programa en este repositorio proceder a abrir un Issue Si tiene dudas de que es un Issue por favor lea documentacion: Issue detailed topics docs Issue from code","title":"Dudas y preguntas:"},{"location":"#contacto","text":"Si desea contactarme favor enviar un correo a jcano@ufm.edu","title":"Contacto"},{"location":"hdt/","text":"HDT Soluciones a Hojas de Trabajo vistas en clases.","title":"HDT"},{"location":"hdt/#hdt","text":"Soluciones a Hojas de Trabajo vistas en clases.","title":"HDT"},{"location":"hdt/c.pointers/","text":"HDT - C pointers Ejercicio 1. Escriba una funci\u00f3n sencilla foo(int x) cuyo \u00fanico prop\u00f3sito sea imprimir la direcci\u00f3n de memoria de esta variable x . En el main declare una variable entera, imprima su direcci\u00f3n de memoria y luego invoque la funci\u00f3n foo con esta variable. Porque pasa lo que ve? Podr\u00eda dar una explicaci\u00f3n? Ejercicio 2. Haga un programa con una funcion sum(...) dentro en C que pida 2 n\u00fameros y los sume usando punteros. operators * : ref operator : deref operator Ejercicio 3. Haga una funci\u00f3n llamada elevate(...) que reciba 1 n\u00famero, pasado por referencia (punteros) y lo eleve al cuadrado tiene que modificar la variable 'original', no puede ser una copia . Debe crear la funci\u00f3n con su main. Ejercicio 4. Haga una funci\u00f3n que se llama swap(...) que reciba 2 n\u00fameros e intercambien sus valores entre s\u00ed. Punteros obviamente aqui la unica forma de hacer esto es pasarlos por referencia y no por valor. Ejercicio 5. Haga un programa que reciba un string del usuario (de tama\u00f1o desconocido) y un char del usuario y que busque el char dentro del string, aseg\u00farese que todo la manipulaci\u00f3n del string sea usando punteros. //strings char * string = Hola Mundo! ; // para acceder al primer char printf ( %c , * string ); // para moverme al siguiente char printf ( %c , * ( string + 1 )); // para saber end of string, usando char nulo // \\0 Ejercicio 6. Haga un programa en C que copie los elementos de un arreglo de un arreglo a otro usando punteros. Ejercicio 7. Haga una funcion que devuelva el largo de un string usando punteros, esta funci\u00f3n (strlen) ya existe en la librer\u00eda string.h (NO puede usarla), debe implementarla usted mismo, recuerde que los strings terminan con este car\u00e1cter \\0 strlen NO PUEDE USAR esta funcion Ejercicio 8. Haga dos funciones que reciba un string y que conviertan el string original una a mayus y la otra funci\u00f3n a minus todo el texto usando punteros. Ap\u00f3yese en que cada car\u00e1cter es un n\u00famero de la tabla ascii. //Ejemplo: char * texto = \u201c Hola Mundo \u201d ; mayus ( texto ) = \u201c HOLA MUNDO \u201d ; gets(str) Para leer un string completo puede usar la funci\u00f3n gets(str) Ejercicio 9 Lea un string del usuario y un car\u00e1cter char , usando punteros reemplace todas las ocurrencias del caracter char dentro del string por un _ (underscore) Ejercicio 10 De acuerdo con lo visto en clase arr[0] es realmente una abreviaci\u00f3n a *(arr+0) , escriba un programa en C que itere sobre un arreglo de enteros usando esta notaci\u00f3n alternativa. Ejercicio 11 Escriba una funci\u00f3n pretty_array(...) en C que reciba un arreglo de n\u00fameros y lo \u00fanico que haga sea imprimir los elementos de una manera bonita [0|1|2|...] Ejercicio 12 Haga una funci\u00f3n que se llame nuevo_entero(...) que reciba un entero, cree un nuevo entero a partir de este que recibi\u00f3 y que devuelva la nueva direcci\u00f3n de memoria del nuevo entero. func(...) cada que aparezca esos tres puntos (...) significa que no les estoy proveyendo el function prototype si no que ustedes deben averiguar cual es.","title":"C Punteros"},{"location":"hdt/c.pointers/#hdt-c-pointers","text":"","title":"HDT - C pointers"},{"location":"hdt/c.pointers/#ejercicio-1","text":"Escriba una funci\u00f3n sencilla foo(int x) cuyo \u00fanico prop\u00f3sito sea imprimir la direcci\u00f3n de memoria de esta variable x . En el main declare una variable entera, imprima su direcci\u00f3n de memoria y luego invoque la funci\u00f3n foo con esta variable. Porque pasa lo que ve? Podr\u00eda dar una explicaci\u00f3n?","title":"Ejercicio 1."},{"location":"hdt/c.pointers/#ejercicio-2","text":"Haga un programa con una funcion sum(...) dentro en C que pida 2 n\u00fameros y los sume usando punteros. operators * : ref operator : deref operator","title":"Ejercicio 2."},{"location":"hdt/c.pointers/#ejercicio-3","text":"Haga una funci\u00f3n llamada elevate(...) que reciba 1 n\u00famero, pasado por referencia (punteros) y lo eleve al cuadrado tiene que modificar la variable 'original', no puede ser una copia . Debe crear la funci\u00f3n con su main.","title":"Ejercicio 3."},{"location":"hdt/c.pointers/#ejercicio-4","text":"Haga una funci\u00f3n que se llama swap(...) que reciba 2 n\u00fameros e intercambien sus valores entre s\u00ed. Punteros obviamente aqui la unica forma de hacer esto es pasarlos por referencia y no por valor.","title":"Ejercicio 4."},{"location":"hdt/c.pointers/#ejercicio-5","text":"Haga un programa que reciba un string del usuario (de tama\u00f1o desconocido) y un char del usuario y que busque el char dentro del string, aseg\u00farese que todo la manipulaci\u00f3n del string sea usando punteros. //strings char * string = Hola Mundo! ; // para acceder al primer char printf ( %c , * string ); // para moverme al siguiente char printf ( %c , * ( string + 1 )); // para saber end of string, usando char nulo // \\0","title":"Ejercicio 5."},{"location":"hdt/c.pointers/#ejercicio-6","text":"Haga un programa en C que copie los elementos de un arreglo de un arreglo a otro usando punteros.","title":"Ejercicio 6."},{"location":"hdt/c.pointers/#ejercicio-7","text":"Haga una funcion que devuelva el largo de un string usando punteros, esta funci\u00f3n (strlen) ya existe en la librer\u00eda string.h (NO puede usarla), debe implementarla usted mismo, recuerde que los strings terminan con este car\u00e1cter \\0 strlen NO PUEDE USAR esta funcion","title":"Ejercicio 7."},{"location":"hdt/c.pointers/#ejercicio-8","text":"Haga dos funciones que reciba un string y que conviertan el string original una a mayus y la otra funci\u00f3n a minus todo el texto usando punteros. Ap\u00f3yese en que cada car\u00e1cter es un n\u00famero de la tabla ascii. //Ejemplo: char * texto = \u201c Hola Mundo \u201d ; mayus ( texto ) = \u201c HOLA MUNDO \u201d ; gets(str) Para leer un string completo puede usar la funci\u00f3n gets(str)","title":"Ejercicio 8."},{"location":"hdt/c.pointers/#ejercicio-9","text":"Lea un string del usuario y un car\u00e1cter char , usando punteros reemplace todas las ocurrencias del caracter char dentro del string por un _ (underscore)","title":"Ejercicio 9"},{"location":"hdt/c.pointers/#ejercicio-10","text":"De acuerdo con lo visto en clase arr[0] es realmente una abreviaci\u00f3n a *(arr+0) , escriba un programa en C que itere sobre un arreglo de enteros usando esta notaci\u00f3n alternativa.","title":"Ejercicio 10"},{"location":"hdt/c.pointers/#ejercicio-11","text":"Escriba una funci\u00f3n pretty_array(...) en C que reciba un arreglo de n\u00fameros y lo \u00fanico que haga sea imprimir los elementos de una manera bonita [0|1|2|...]","title":"Ejercicio 11"},{"location":"hdt/c.pointers/#ejercicio-12","text":"Haga una funci\u00f3n que se llame nuevo_entero(...) que reciba un entero, cree un nuevo entero a partir de este que recibi\u00f3 y que devuelva la nueva direcci\u00f3n de memoria del nuevo entero. func(...) cada que aparezca esos tres puntos (...) significa que no les estoy proveyendo el function prototype si no que ustedes deben averiguar cual es.","title":"Ejercicio 12"},{"location":"projects/projects/","text":"Lista de Proyectos a realizar durante el curso A continuacion la lista de proyectos y mini proyectos que se desarrollaran a lo largo del curso. Hangman Airline seat reservation","title":"Overview"},{"location":"projects/projects/#lista-de-proyectos-a-realizar-durante-el-curso","text":"A continuacion la lista de proyectos y mini proyectos que se desarrollaran a lo largo del curso. Hangman Airline seat reservation","title":"Lista de Proyectos a realizar durante el curso"},{"location":"projects/airline/","text":"Airline Ticket Reservation Intro Clear Screen en todo tiempo es mejor si hace un clear screen Usted simulara un sistema de reservas de asiento de vuelo desde la perspectiva de la Aerolinea (operador), no desde el usuario. Cuando uno reserva en linea un vuelo hay una seccion en la que uno puede elegir el asiento de su vuelo, para este proyecto es esta fase de la reserva que usted debe implementar. Los asientos de un vuelo se representan con una Letra del abecedario (ABC DEF, 6 caracteres, Numero de columnas) + un digito (1-32, numero de filas), ejemplos: 1A: fila 1 columna 1 22C: fila 22 columna 3 32F: fila 32 columna 6 los asientos dentro del vuelo sera una matriz (un arreglo de arreglos, es decir una tabla) de tama\u00f1o 6x32. .tg {border-collapse:collapse;border-spacing:0;} .tg td{font-family:Arial, sans-serif;font-size:14px;padding:10px 5px;border-style:solid;border-width:1px;overflow:hidden;word-break:normal;border-color:black;} .tg th{font-family:Arial, sans-serif;font-size:14px;font-weight:normal;padding:10px 5px;border-style:solid;border-width:1px;overflow:hidden;word-break:normal;border-color:black;} .tg .tg-k04z{background-color:#c0c0c0;border-color:#656565;text-align:left;vertical-align:top} .tg .tg-c3ow{border-color:inherit;text-align:center;vertical-align:top} .tg .tg-mtln{background-color:#c0c0c0;border-color:#656565;text-align:center;vertical-align:top} .tg .tg-y6fn{background-color:#c0c0c0;text-align:left;vertical-align:top} .tg .tg-0lax{text-align:left;vertical-align:top} A B C D E F 1 A1 B1 C1 D1 E1 F1 2 A2 B2 C2 D2 E2 F2 3 A3 B3 C3 D3 D3 F3 4 A4 B4 C4 D4 E4 F4 5 A5 B5 C5 D5 E5 F5 6 A6 B6 C6 D6 E6 F6 Image, click to expand Fase 1 - Menu Para esta fase debe desarrollar un menu de bienvenida La matriz se inicializara todas las casillas en 0 , ningun asiento reservado. Mostrara un menu con opciones para empezar a reservar. Pedira el numero de vuelo que la aerolinea estar trabajando, el formato del vuelo sera un texto de 5 caracteres,ejemplos: \"AA101\", \"UA345\", \"BTZ11\", no debe verificar nada de este ID excepto su longitud, este ID servira para mostrarlo en la terminal. Las opciones seran: Reservar asiento Ver disponibilidad de Asientos. Salir Este menu se ejecutara infinitamente, al menos que se seleccione la opcion \"Salir\" Menu Ejemplo Fase 2 - reservacion Si en el menu se elige la opcion \"Reservar asiento\" entrara a esta etapa. En esta fase se implementara la reserva de un asiento. Se le pedira al operador que ingrese un numero de asiento en el format LetraDigito Su programa debera \"interpretar\" este formato a un formato de matriz[Letra][Digito], debera hacer alguna funcion que recibiendo una Letra devuelva el numero de columna que representa en la matriz de reservaciones. Una vez se interpreta eso, su programa debe verficiar si este asiento ya fue reservado, de ser asi se le mostrara al operador que el asiento esta reservado y que debe volver a elegir otro asiento (Volver a paso 2) Si el asiento se encuentra libre debe \"reservar\" este asiento en su matriz de alguna manera, explicada en la nota \"reservas\" Si el operador ingresa la palabra \"menu\" en el paso 2 entonces el programa debe salir de la \"reserva\" y regresara al menu principal. reservas Letra : columnas Digito : Filas Dentro de su matriz : Asientos reservados se representaran con X MAYUS . Y asiento libre lo representara con 0 Ejemplo Fase 3 - Ver disponibilidad Si en el menu se elige la opcion \"Ver disponibilidad de Asientos\" entrara a esta parte. En esta fase se implementara la visualizacion de reservas Se mostara la matriz de una forma \"grafica\" en la terminal, con sus encabezados en columnas (A-F) y las filas (1-32) Mostrando los asientos reservados X y los asientos libres 0 Ejemplo Ejemplo Fase 4 - Ver Resumen En esta fase debe mostrar un resumen de reservas. Mostrar cuantos asientos han sido reservados y cuantos quedan libres. Mostrar un porcentaje de reservados y libres. Para esta fase debe iterar sobre toda la matriz buscando asientos reservados y libres. Ejemplo Ejemplo Puntos Extra Si quiere obtener puntos extra sera posible de la siguiente manera, Agregara una nueva funcionalidad Sugerir Asiento Cuando un vuelo se encuentra casi lleno sera muy dificil encontrar un asiento libre, que le parece si su programa le sugiere el asiento? Esta sugerencia debera suceder cuando en la fase de reservacion nos encontremos en el punto #4 mostrara al operador que el asiento esta reservado y que debe volver a elegir otro asiento (Volver a paso 2) Para poder sugerir un asiento que no este ocupado su programa debe 'recorrer' por toda la matriz de asientos hasta encontrar el primer asiento disponible y ese es el que va a sugerir. Info Asiento A6 ya reservado , ingrese un nuevo asiento Sugerido : F4","title":"1. Instrucciones"},{"location":"projects/airline/#airline-ticket-reservation","text":"","title":"Airline Ticket Reservation"},{"location":"projects/airline/#intro","text":"Clear Screen en todo tiempo es mejor si hace un clear screen Usted simulara un sistema de reservas de asiento de vuelo desde la perspectiva de la Aerolinea (operador), no desde el usuario. Cuando uno reserva en linea un vuelo hay una seccion en la que uno puede elegir el asiento de su vuelo, para este proyecto es esta fase de la reserva que usted debe implementar. Los asientos de un vuelo se representan con una Letra del abecedario (ABC DEF, 6 caracteres, Numero de columnas) + un digito (1-32, numero de filas), ejemplos: 1A: fila 1 columna 1 22C: fila 22 columna 3 32F: fila 32 columna 6 los asientos dentro del vuelo sera una matriz (un arreglo de arreglos, es decir una tabla) de tama\u00f1o 6x32. .tg {border-collapse:collapse;border-spacing:0;} .tg td{font-family:Arial, sans-serif;font-size:14px;padding:10px 5px;border-style:solid;border-width:1px;overflow:hidden;word-break:normal;border-color:black;} .tg th{font-family:Arial, sans-serif;font-size:14px;font-weight:normal;padding:10px 5px;border-style:solid;border-width:1px;overflow:hidden;word-break:normal;border-color:black;} .tg .tg-k04z{background-color:#c0c0c0;border-color:#656565;text-align:left;vertical-align:top} .tg .tg-c3ow{border-color:inherit;text-align:center;vertical-align:top} .tg .tg-mtln{background-color:#c0c0c0;border-color:#656565;text-align:center;vertical-align:top} .tg .tg-y6fn{background-color:#c0c0c0;text-align:left;vertical-align:top} .tg .tg-0lax{text-align:left;vertical-align:top} A B C D E F 1 A1 B1 C1 D1 E1 F1 2 A2 B2 C2 D2 E2 F2 3 A3 B3 C3 D3 D3 F3 4 A4 B4 C4 D4 E4 F4 5 A5 B5 C5 D5 E5 F5 6 A6 B6 C6 D6 E6 F6 Image, click to expand","title":"Intro"},{"location":"projects/airline/#fase-1-menu","text":"Para esta fase debe desarrollar un menu de bienvenida La matriz se inicializara todas las casillas en 0 , ningun asiento reservado. Mostrara un menu con opciones para empezar a reservar. Pedira el numero de vuelo que la aerolinea estar trabajando, el formato del vuelo sera un texto de 5 caracteres,ejemplos: \"AA101\", \"UA345\", \"BTZ11\", no debe verificar nada de este ID excepto su longitud, este ID servira para mostrarlo en la terminal. Las opciones seran: Reservar asiento Ver disponibilidad de Asientos. Salir Este menu se ejecutara infinitamente, al menos que se seleccione la opcion \"Salir\" Menu Ejemplo","title":"Fase 1 - Menu"},{"location":"projects/airline/#fase-2-reservacion","text":"Si en el menu se elige la opcion \"Reservar asiento\" entrara a esta etapa. En esta fase se implementara la reserva de un asiento. Se le pedira al operador que ingrese un numero de asiento en el format LetraDigito Su programa debera \"interpretar\" este formato a un formato de matriz[Letra][Digito], debera hacer alguna funcion que recibiendo una Letra devuelva el numero de columna que representa en la matriz de reservaciones. Una vez se interpreta eso, su programa debe verficiar si este asiento ya fue reservado, de ser asi se le mostrara al operador que el asiento esta reservado y que debe volver a elegir otro asiento (Volver a paso 2) Si el asiento se encuentra libre debe \"reservar\" este asiento en su matriz de alguna manera, explicada en la nota \"reservas\" Si el operador ingresa la palabra \"menu\" en el paso 2 entonces el programa debe salir de la \"reserva\" y regresara al menu principal. reservas Letra : columnas Digito : Filas Dentro de su matriz : Asientos reservados se representaran con X MAYUS . Y asiento libre lo representara con 0 Ejemplo","title":"Fase 2 - reservacion"},{"location":"projects/airline/#fase-3-ver-disponibilidad","text":"Si en el menu se elige la opcion \"Ver disponibilidad de Asientos\" entrara a esta parte. En esta fase se implementara la visualizacion de reservas Se mostara la matriz de una forma \"grafica\" en la terminal, con sus encabezados en columnas (A-F) y las filas (1-32) Mostrando los asientos reservados X y los asientos libres 0 Ejemplo Ejemplo","title":"Fase 3 - Ver disponibilidad"},{"location":"projects/airline/#fase-4-ver-resumen","text":"En esta fase debe mostrar un resumen de reservas. Mostrar cuantos asientos han sido reservados y cuantos quedan libres. Mostrar un porcentaje de reservados y libres. Para esta fase debe iterar sobre toda la matriz buscando asientos reservados y libres. Ejemplo Ejemplo","title":"Fase 4 -  Ver Resumen"},{"location":"projects/airline/#puntos-extra","text":"Si quiere obtener puntos extra sera posible de la siguiente manera, Agregara una nueva funcionalidad Sugerir Asiento Cuando un vuelo se encuentra casi lleno sera muy dificil encontrar un asiento libre, que le parece si su programa le sugiere el asiento? Esta sugerencia debera suceder cuando en la fase de reservacion nos encontremos en el punto #4 mostrara al operador que el asiento esta reservado y que debe volver a elegir otro asiento (Volver a paso 2) Para poder sugerir un asiento que no este ocupado su programa debe 'recorrer' por toda la matriz de asientos hasta encontrar el primer asiento disponible y ese es el que va a sugerir. Info Asiento A6 ya reservado , ingrese un nuevo asiento Sugerido : F4","title":"Puntos Extra"},{"location":"projects/airline/appendix/","text":"Appendix algunas recomendaciones para este proyecto. Matrices Una matriz es un arreglo de arreglos en C y en la mayoria de lenguajes se define de la siguiente manera: // matriz de 2 columnas y 3 filas. int matriz [ 2 ][ 3 ] = { { 100 , 101 , 102 }, { 0 , 0 , 0 } }; // note que es diferente en el orden que se define. // matriz de 3 cols y 2 rows. int m1 [ 3 ][ 2 ] = { { 0 , 1 }, { 2 , 3 } ,{ 4 , 5 } }; // devolveria 1 m1 [ 0 ][ 1 ]; // devolveria 3 m1 [ 1 ][ 1 ]; int m2 [ 1 ][ 1 ] = { { 0 } }; // lo mejor es declarar esta matriz de manera global, afuera de su main() int main (){ return 0 ; } Para iterar una matriz Necesita dos ciclos. int columns = 2 ; int rows = 3 ; int matriz [ columns ][ rows ] = { { 100 , 101 , 102 }, { 0 , 0 , 0 } }; for ( int col = 0 ; col columns ; col ++ ){ for ( int row = 0 ; row rows ; row ++ ){ printf ( %i , matriz [ col ][ row ]); } } Funciones para cada fase, Menu, Reserva y Visualizar utilice funciones (procs) // note que se devuelve void. void visualize (){ //... } Macros Si quisiera definir \"constantes\" (aunque las constantes son cosas distintas) puede utilizar Macros // declarados de manera global #define BUFFER_SIZE 1024 . . . // mas adelante, se puede utilizar y este numero quedaria reemplazado por un 1024 int n [ BUFFER_SIZE ]; Presionar enter Para esperar que el usuario presione 'Enter' puede usar getchar() // Example for getchar() in C #include stdio.h int main () { printf ( Presione Enter \\n ); getchar (); return 0 ; } clearscreen //clearscreen #include stdlib.h void clearscreen () { system ( @cls||clear ); }","title":"3. Appendix"},{"location":"projects/airline/appendix/#appendix","text":"algunas recomendaciones para este proyecto.","title":"Appendix"},{"location":"projects/airline/appendix/#matrices","text":"Una matriz es un arreglo de arreglos en C y en la mayoria de lenguajes se define de la siguiente manera: // matriz de 2 columnas y 3 filas. int matriz [ 2 ][ 3 ] = { { 100 , 101 , 102 }, { 0 , 0 , 0 } }; // note que es diferente en el orden que se define. // matriz de 3 cols y 2 rows. int m1 [ 3 ][ 2 ] = { { 0 , 1 }, { 2 , 3 } ,{ 4 , 5 } }; // devolveria 1 m1 [ 0 ][ 1 ]; // devolveria 3 m1 [ 1 ][ 1 ]; int m2 [ 1 ][ 1 ] = { { 0 } }; // lo mejor es declarar esta matriz de manera global, afuera de su main() int main (){ return 0 ; }","title":"Matrices"},{"location":"projects/airline/appendix/#para-iterar-una-matriz","text":"Necesita dos ciclos. int columns = 2 ; int rows = 3 ; int matriz [ columns ][ rows ] = { { 100 , 101 , 102 }, { 0 , 0 , 0 } }; for ( int col = 0 ; col columns ; col ++ ){ for ( int row = 0 ; row rows ; row ++ ){ printf ( %i , matriz [ col ][ row ]); } }","title":"Para iterar una matriz"},{"location":"projects/airline/appendix/#funciones","text":"para cada fase, Menu, Reserva y Visualizar utilice funciones (procs) // note que se devuelve void. void visualize (){ //... }","title":"Funciones"},{"location":"projects/airline/appendix/#macros","text":"Si quisiera definir \"constantes\" (aunque las constantes son cosas distintas) puede utilizar Macros // declarados de manera global #define BUFFER_SIZE 1024 . . . // mas adelante, se puede utilizar y este numero quedaria reemplazado por un 1024 int n [ BUFFER_SIZE ];","title":"Macros"},{"location":"projects/airline/appendix/#presionar-enter","text":"Para esperar que el usuario presione 'Enter' puede usar getchar() // Example for getchar() in C #include stdio.h int main () { printf ( Presione Enter \\n ); getchar (); return 0 ; }","title":"Presionar enter"},{"location":"projects/airline/appendix/#clearscreen","text":"//clearscreen #include stdlib.h void clearscreen () { system ( @cls||clear ); }","title":"clearscreen"},{"location":"projects/airline/ejemplo/","text":"Ejemplo Menu Bienvenida Ingrese Numero de Vuelo (5 caracteres): _ Numero de vuelo se pide que el usuario ingrese el numero de vuelo. Se muestran las opciones del Menu principal. Bienvenido al TRv1 vuelo : AA101 1 . Reservar asiento 2 . Ver asiento disponibles 3 . Ver Resumen . 4 . Salir Reservar Asiento Vuelo AA123 Ingrese asiento a reservar : A6 Si fuera asiento disponible Asiento A6 reservado exitosamente !! Presione Enter para volver al menu principal Volver Volveria al menu principal (sin pedir numero de vuelo) Si fuera asiento no disponible y volveria a pedir Ingrese asiento a reservar: Asiento A6 ya reservado, ingrese otro asiento Volver a pedir asiento Volveria a Reservar asiento Ver disponibilidad de Asientos | | A | B | C | D | E | F | ----------------------------- | 1 | 0 | 0 | X | 0 | 0 | 0 | | 2 | 0 | 0 | 0 | 0 | 0 | 0 | | 3 | 0 | 0 | 0 | 0 | 0 | 0 | | 4 | 0 | 0 | 0 | 0 | 0 | 0 | . . . | 32| 0 | 0 | 0 | 0 | 0 | 0 | Presione Enter para volver al menu principal. Ver Resumen ### RESUMEN Reservados: 3/32 [9.4%] Libres: 29/32 [90.6%]","title":"2. Ejemplo"},{"location":"projects/airline/ejemplo/#ejemplo","text":"","title":"Ejemplo"},{"location":"projects/airline/ejemplo/#menu-bienvenida","text":"Ingrese Numero de Vuelo (5 caracteres): _ Numero de vuelo se pide que el usuario ingrese el numero de vuelo. Se muestran las opciones del Menu principal. Bienvenido al TRv1 vuelo : AA101 1 . Reservar asiento 2 . Ver asiento disponibles 3 . Ver Resumen . 4 . Salir","title":"Menu Bienvenida"},{"location":"projects/airline/ejemplo/#reservar-asiento","text":"Vuelo AA123 Ingrese asiento a reservar : A6 Si fuera asiento disponible Asiento A6 reservado exitosamente !! Presione Enter para volver al menu principal Volver Volveria al menu principal (sin pedir numero de vuelo) Si fuera asiento no disponible y volveria a pedir Ingrese asiento a reservar: Asiento A6 ya reservado, ingrese otro asiento Volver a pedir asiento Volveria a Reservar asiento","title":"Reservar Asiento"},{"location":"projects/airline/ejemplo/#ver-disponibilidad-de-asientos","text":"| | A | B | C | D | E | F | ----------------------------- | 1 | 0 | 0 | X | 0 | 0 | 0 | | 2 | 0 | 0 | 0 | 0 | 0 | 0 | | 3 | 0 | 0 | 0 | 0 | 0 | 0 | | 4 | 0 | 0 | 0 | 0 | 0 | 0 | . . . | 32| 0 | 0 | 0 | 0 | 0 | 0 | Presione Enter para volver al menu principal.","title":"Ver disponibilidad de Asientos"},{"location":"projects/airline/ejemplo/#ver-resumen","text":"### RESUMEN Reservados: 3/32 [9.4%] Libres: 29/32 [90.6%]","title":"Ver Resumen"},{"location":"projects/airline/entrega/","text":"Forma de Entrega Para entregar su proyecto debera: Entregar un link a su repositorio de Github. asegurese que su repositorio sea publico. asegurese de haber hecho los commits usted, revisaremos el commit log.","title":"4. Entrega"},{"location":"projects/airline/entrega/#forma-de-entrega","text":"Para entregar su proyecto debera: Entregar un link a su repositorio de Github. asegurese que su repositorio sea publico. asegurese de haber hecho los commits usted, revisaremos el commit log.","title":"Forma de Entrega"},{"location":"projects/hangman/","text":"Hangman Para este proyecto usted realizara un hangman (ahorcado) con algunos detalles propios. Se le brindara un proyecto base con algunas \"funciones\" ya agregadas sobre las cuales usted agregara logica, programacion y codigo propio. El proyecto se divira en Modulos o Fase, a manera que usted pueda ir cubriendo fase por fase y hacer peque\u00f1os incrementos. Trabajo Se Trabajara en parejas o individual , sin excepcion. Proyecto Base - Para empezar Este es el proyecto Base que usted puede utilizar Asegurese de: Hacer FORK! Llenar las secciones necesarias del README.md de su Forked repo. Fase 1 Crear un Menu para que el usuario pueda jugar, Ver Instrucciones, About y Salir del juego, detallado mas adelante. Este Menu debe mostrar las opciones y solamente esperar que el usuario ingrese una de las varias opciones para continuar. Este menu debera iterar infinitamente hasta que el usuario solicite salir (2 maneras de salir, una de ellas se explica aqui 'opcion 4', para la segunda continue leyendo), es decir si el jugador pierde o gana debe regresar a este menu. Menu Se debera pedir al usuario una opcion dentro de 4 opciones, si ingresa opcion '4' por ejemplo debera salir. ######### HANGMAN MENU ######### 1. Empezar Juego 2. Ver Instrucciones 3. About 4. Salir Ingrese Opcion : Note Por Favor sea creativo esto es solo un ejemplo del Menu, usted puede *agregar* (no quitar) opciones, puede utilizar otro formato mas bonito si desea Empezar Juego Existiran 2 \"pantallas/vistas\": 1.Ingreso de Nombre de Jugador: Debera Pedir el nombre del jugador o el Usuario/Alias (Algo como: Fox, Rabbit) y en todo momento del juego mostrar el nombre del jugador. gets vs scanf para leer un string completo puede usar la funcion gets(str) lee todo un string hasta que se presione enter que a diferencia de scanf que solo leeria la primer palabra ingresada y no todo el string. 2.Juego: Y empezar a mostar la \"pantalla\" de juego mostrada en Ejemplo Jugador : Marcos Intentos : 4/10 Aciertos : 2 Palabra : _ o _ a Ingrese Letra/Palabra : s al elegir opcion '1' NOTA: ignore los colores. Ver Instrucciones Mostrara las instrucciones de como jugar el juego, es como un pequeno \"help menu\" al elegir opcion '2' About Mostrara informacion del alumno desarrollador, correo electronico y/o algo mas que usted desee mostrar. al elegir opcion '3' Salir Saldra de la ejecucion del juego. exit(0); al elegir opcion '4' Fase 2 Recuerde que se le proveera un Proyecto Base del cual usted puede partir y agregar su codigo, funciones, etc. Dentro de ese proyecto se le provee un banco de palabras a adivinar, de longitud distinta, usted puede modificar este banco de palabras (lea los comentarios en el proyecto base). Este banco de palabras NO tendra palabras con numeros! aseguerese de NO agregar una palabra con numeros. [esto ya esta hecho] //banco de palabras. const char * word_collection [ MAX_WORDS ] = { este , es , un , banco , de , palabras , sientase , en , libertad , de , agregar , la , cantidad , de , palabras , que , usted , desee , hasta , un , maximo , de , MAX_WORDS }; seleccionara una palabra aleatoria de ese banco y la asignara a una variable. [esto ya esta hecho mediante una funcion] Mostrar en la pantalla de juego la palabra seleccionada \"oculta\" de esta manera: _ _ _ _ _ underscores dependiendo la cantidad de letras que tenga. Por ejemplo si la palabra fuera \"guatemala\" entonces se mostrar de esta manera _ _ _ _ _ _ _ _ _ _ _ _ emepezara el juego y el usuario empezara a ingresar (adivinar) letras que cree que la palabra contiene o la palabra directamente. el usuario tendra N (N debe ser una variable global que sea facil de cambiar, comenzara en 10) intentos antes que se ahorque (se acabe el juego) cada que se adivine una letra se \"descubrira\" esa letra las veces que aparezca esa letra dentro de la palabra y se mostrara en la siguiente vez que se refresque la pantalla. (vea ejemplo ) todo sera en modo consola o modo terminal, sin colores (al menos que usted desee agregar colores por puntas extra) no habra distincion de mayusculas o minusculas. (todo sera minusculas) Fase 3 el juego se puede terminar al: completar la palabra letra por letra o ingresar la palabra directamente presionar la letra 0 (numero cero) 1 cada que se imprima o refresque la pantalla puede hacer un clearscreen o bien imprimir lineas a manera que se \"refresque\" Al terminar el juego y ganar se mostrara una pantalla de \"Victoria\" con el resumen del juego. (vea el ejemplo ) Al terminar el juego y haber perdido se mostrara una pantalla de \"Derrota\" con el resumen de juego. (vea el ejemplo ) //clearscreen #include stdlib.h void clearscreen () { system ( @cls||clear ); } Ejemplo Supongamos que se elige la palabra hola ** Intento 1, se ingresa letra 'a'** Jugador : Marcos Intentos : 1/10 Aciertos : 0 Palabra : _ _ _ _ Ingrese Letra/Palabra : a ** Intento 2, se ingresa letra 'b' ** Jugador : Marcos Intentos : 2/10 Aciertos : 1 Palabra : _ _ _ a Ingrese Letra/Palabra : b ** Intento 3, se ingresa letra 'o' ** Jugador : Marcos Intentos : 3/10 Aciertos : 1 Palabra : _ _ _ a Ingrese Letra/Palabra : o ** Intento 4, se ingresa palabra 'hola' ** Jugador : Marcos Intentos : 4/10 Aciertos : 2 Palabra : _ o _ a Ingrese Letra/Palabra : hola ** Fin de Juego ** ######### GANO!!! ######### Palabra adivinada : hola Jugador : Marcos Intentos : 4/10 Presione Enter para volver a Menu ** Si en caso Perdiera ** ######### GAME OVER ######### Palabra a adivinar : hola Jugador : Marcos Intentos : 10/10 Presione Enter para volver a Menu por eso es indispensable que ninguna palabra contenga algun numero!; puede alterar la combinacion para salir por un '0Q' o '0Z'","title":"1. Instrucciones"},{"location":"projects/hangman/#hangman","text":"Para este proyecto usted realizara un hangman (ahorcado) con algunos detalles propios. Se le brindara un proyecto base con algunas \"funciones\" ya agregadas sobre las cuales usted agregara logica, programacion y codigo propio. El proyecto se divira en Modulos o Fase, a manera que usted pueda ir cubriendo fase por fase y hacer peque\u00f1os incrementos.","title":"Hangman"},{"location":"projects/hangman/#trabajo","text":"Se Trabajara en parejas o individual , sin excepcion.","title":"Trabajo"},{"location":"projects/hangman/#proyecto-base-para-empezar","text":"Este es el proyecto Base que usted puede utilizar Asegurese de: Hacer FORK! Llenar las secciones necesarias del README.md de su Forked repo.","title":"Proyecto Base - Para empezar"},{"location":"projects/hangman/#fase-1","text":"Crear un Menu para que el usuario pueda jugar, Ver Instrucciones, About y Salir del juego, detallado mas adelante. Este Menu debe mostrar las opciones y solamente esperar que el usuario ingrese una de las varias opciones para continuar. Este menu debera iterar infinitamente hasta que el usuario solicite salir (2 maneras de salir, una de ellas se explica aqui 'opcion 4', para la segunda continue leyendo), es decir si el jugador pierde o gana debe regresar a este menu.","title":"Fase 1"},{"location":"projects/hangman/#menu","text":"Se debera pedir al usuario una opcion dentro de 4 opciones, si ingresa opcion '4' por ejemplo debera salir. ######### HANGMAN MENU ######### 1. Empezar Juego 2. Ver Instrucciones 3. About 4. Salir Ingrese Opcion : Note Por Favor sea creativo esto es solo un ejemplo del Menu, usted puede *agregar* (no quitar) opciones, puede utilizar otro formato mas bonito si desea","title":"Menu"},{"location":"projects/hangman/#empezar-juego","text":"Existiran 2 \"pantallas/vistas\": 1.Ingreso de Nombre de Jugador: Debera Pedir el nombre del jugador o el Usuario/Alias (Algo como: Fox, Rabbit) y en todo momento del juego mostrar el nombre del jugador. gets vs scanf para leer un string completo puede usar la funcion gets(str) lee todo un string hasta que se presione enter que a diferencia de scanf que solo leeria la primer palabra ingresada y no todo el string. 2.Juego: Y empezar a mostar la \"pantalla\" de juego mostrada en Ejemplo Jugador : Marcos Intentos : 4/10 Aciertos : 2 Palabra : _ o _ a Ingrese Letra/Palabra : s al elegir opcion '1' NOTA: ignore los colores.","title":"Empezar Juego"},{"location":"projects/hangman/#ver-instrucciones","text":"Mostrara las instrucciones de como jugar el juego, es como un pequeno \"help menu\" al elegir opcion '2'","title":"Ver Instrucciones"},{"location":"projects/hangman/#about","text":"Mostrara informacion del alumno desarrollador, correo electronico y/o algo mas que usted desee mostrar. al elegir opcion '3'","title":"About"},{"location":"projects/hangman/#salir","text":"Saldra de la ejecucion del juego. exit(0); al elegir opcion '4'","title":"Salir"},{"location":"projects/hangman/#fase-2","text":"Recuerde que se le proveera un Proyecto Base del cual usted puede partir y agregar su codigo, funciones, etc. Dentro de ese proyecto se le provee un banco de palabras a adivinar, de longitud distinta, usted puede modificar este banco de palabras (lea los comentarios en el proyecto base). Este banco de palabras NO tendra palabras con numeros! aseguerese de NO agregar una palabra con numeros. [esto ya esta hecho] //banco de palabras. const char * word_collection [ MAX_WORDS ] = { este , es , un , banco , de , palabras , sientase , en , libertad , de , agregar , la , cantidad , de , palabras , que , usted , desee , hasta , un , maximo , de , MAX_WORDS }; seleccionara una palabra aleatoria de ese banco y la asignara a una variable. [esto ya esta hecho mediante una funcion] Mostrar en la pantalla de juego la palabra seleccionada \"oculta\" de esta manera: _ _ _ _ _ underscores dependiendo la cantidad de letras que tenga. Por ejemplo si la palabra fuera \"guatemala\" entonces se mostrar de esta manera _ _ _ _ _ _ _ _ _ _ _ _ emepezara el juego y el usuario empezara a ingresar (adivinar) letras que cree que la palabra contiene o la palabra directamente. el usuario tendra N (N debe ser una variable global que sea facil de cambiar, comenzara en 10) intentos antes que se ahorque (se acabe el juego) cada que se adivine una letra se \"descubrira\" esa letra las veces que aparezca esa letra dentro de la palabra y se mostrara en la siguiente vez que se refresque la pantalla. (vea ejemplo ) todo sera en modo consola o modo terminal, sin colores (al menos que usted desee agregar colores por puntas extra) no habra distincion de mayusculas o minusculas. (todo sera minusculas)","title":"Fase 2"},{"location":"projects/hangman/#fase-3","text":"el juego se puede terminar al: completar la palabra letra por letra o ingresar la palabra directamente presionar la letra 0 (numero cero) 1 cada que se imprima o refresque la pantalla puede hacer un clearscreen o bien imprimir lineas a manera que se \"refresque\" Al terminar el juego y ganar se mostrara una pantalla de \"Victoria\" con el resumen del juego. (vea el ejemplo ) Al terminar el juego y haber perdido se mostrara una pantalla de \"Derrota\" con el resumen de juego. (vea el ejemplo )","title":"Fase 3"},{"location":"projects/hangman/#clearscreen-include-stdlibh-void-clearscreen-systemclsclear","text":"","title":"//clearscreen"},{"location":"projects/hangman/#ejemplo","text":"Supongamos que se elige la palabra hola ** Intento 1, se ingresa letra 'a'** Jugador : Marcos Intentos : 1/10 Aciertos : 0 Palabra : _ _ _ _ Ingrese Letra/Palabra : a ** Intento 2, se ingresa letra 'b' ** Jugador : Marcos Intentos : 2/10 Aciertos : 1 Palabra : _ _ _ a Ingrese Letra/Palabra : b ** Intento 3, se ingresa letra 'o' ** Jugador : Marcos Intentos : 3/10 Aciertos : 1 Palabra : _ _ _ a Ingrese Letra/Palabra : o ** Intento 4, se ingresa palabra 'hola' ** Jugador : Marcos Intentos : 4/10 Aciertos : 2 Palabra : _ o _ a Ingrese Letra/Palabra : hola ** Fin de Juego ** ######### GANO!!! ######### Palabra adivinada : hola Jugador : Marcos Intentos : 4/10 Presione Enter para volver a Menu ** Si en caso Perdiera ** ######### GAME OVER ######### Palabra a adivinar : hola Jugador : Marcos Intentos : 10/10 Presione Enter para volver a Menu por eso es indispensable que ninguna palabra contenga algun numero!; puede alterar la combinacion para salir por un '0Q' o '0Z'","title":"Ejemplo"},{"location":"projects/hangman/para_entregar/","text":"Forma de Entrega Para entregar su proyecto debera: Entregar un link a su repositorio de Github. asegurese que su repositorio sea publico. asegurese de haber hecho los commits usted, revisaremos el commit log. cada integrante del grupo debera tener commits.","title":"2. Forma de Entrega"},{"location":"projects/hangman/para_entregar/#forma-de-entrega","text":"Para entregar su proyecto debera: Entregar un link a su repositorio de Github. asegurese que su repositorio sea publico. asegurese de haber hecho los commits usted, revisaremos el commit log. cada integrante del grupo debera tener commits.","title":"Forma de Entrega"}]}